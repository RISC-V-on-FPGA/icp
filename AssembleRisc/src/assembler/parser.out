Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> LABEL_COLON NEWLINE
Rule 2     expression -> ID register COMMA register COMMA register NEWLINE
Rule 3     expression -> ID register COMMA register COMMA IMMEDIATE NEWLINE
Rule 4     expression -> ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
Rule 5     expression -> ID register COMMA IMMEDIATE NEWLINE
Rule 6     expression -> ID register COMMA ID NEWLINE
Rule 7     expression -> ID register COMMA register COMMA ID NEWLINE
Rule 8     expression -> COMPRESSED_ID register COMMA register NEWLINE
Rule 9     expression -> COMPRESSED_ID register COMMA IMMEDIATE NEWLINE
Rule 10    expression -> COMPRESSED_ID register COMMA ID NEWLINE
Rule 11    expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
Rule 12    register -> REGISTER
Rule 13    expression -> NEWLINE

Terminals, with rules where they appear

COMMA                : 2 2 3 3 4 5 6 7 7 8 9 10 11
COMPRESSED_ID        : 8 9 10 11
ID                   : 2 3 4 5 6 6 7 7 10
IMMEDIATE            : 3 4 5 9 11
LABEL_COLON          : 1
LEFT_PAREN           : 4 11
NEWLINE              : 1 2 3 4 5 6 7 8 9 10 11 13
REGISTER             : 12
RIGHT_PAREN          : 4 11
error                : 

Nonterminals, with rules where they appear

expression           : 0
register             : 2 2 2 3 3 4 4 5 6 7 7 8 8 9 10 11 11

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . LABEL_COLON NEWLINE
    (2) expression -> . ID register COMMA register COMMA register NEWLINE
    (3) expression -> . ID register COMMA register COMMA IMMEDIATE NEWLINE
    (4) expression -> . ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (5) expression -> . ID register COMMA IMMEDIATE NEWLINE
    (6) expression -> . ID register COMMA ID NEWLINE
    (7) expression -> . ID register COMMA register COMMA ID NEWLINE
    (8) expression -> . COMPRESSED_ID register COMMA register NEWLINE
    (9) expression -> . COMPRESSED_ID register COMMA IMMEDIATE NEWLINE
    (10) expression -> . COMPRESSED_ID register COMMA ID NEWLINE
    (11) expression -> . COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (13) expression -> . NEWLINE

    LABEL_COLON     shift and go to state 2
    ID              shift and go to state 4
    COMPRESSED_ID   shift and go to state 5
    NEWLINE         shift and go to state 3

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> LABEL_COLON . NEWLINE

    NEWLINE         shift and go to state 6


state 3

    (13) expression -> NEWLINE .

    $end            reduce using rule 13 (expression -> NEWLINE .)


state 4

    (2) expression -> ID . register COMMA register COMMA register NEWLINE
    (3) expression -> ID . register COMMA register COMMA IMMEDIATE NEWLINE
    (4) expression -> ID . register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (5) expression -> ID . register COMMA IMMEDIATE NEWLINE
    (6) expression -> ID . register COMMA ID NEWLINE
    (7) expression -> ID . register COMMA register COMMA ID NEWLINE
    (12) register -> . REGISTER

    REGISTER        shift and go to state 8

    register                       shift and go to state 7

state 5

    (8) expression -> COMPRESSED_ID . register COMMA register NEWLINE
    (9) expression -> COMPRESSED_ID . register COMMA IMMEDIATE NEWLINE
    (10) expression -> COMPRESSED_ID . register COMMA ID NEWLINE
    (11) expression -> COMPRESSED_ID . register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (12) register -> . REGISTER

    REGISTER        shift and go to state 8

    register                       shift and go to state 9

state 6

    (1) expression -> LABEL_COLON NEWLINE .

    $end            reduce using rule 1 (expression -> LABEL_COLON NEWLINE .)


state 7

    (2) expression -> ID register . COMMA register COMMA register NEWLINE
    (3) expression -> ID register . COMMA register COMMA IMMEDIATE NEWLINE
    (4) expression -> ID register . COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (5) expression -> ID register . COMMA IMMEDIATE NEWLINE
    (6) expression -> ID register . COMMA ID NEWLINE
    (7) expression -> ID register . COMMA register COMMA ID NEWLINE

    COMMA           shift and go to state 10


state 8

    (12) register -> REGISTER .

    COMMA           reduce using rule 12 (register -> REGISTER .)
    NEWLINE         reduce using rule 12 (register -> REGISTER .)
    RIGHT_PAREN     reduce using rule 12 (register -> REGISTER .)


state 9

    (8) expression -> COMPRESSED_ID register . COMMA register NEWLINE
    (9) expression -> COMPRESSED_ID register . COMMA IMMEDIATE NEWLINE
    (10) expression -> COMPRESSED_ID register . COMMA ID NEWLINE
    (11) expression -> COMPRESSED_ID register . COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE

    COMMA           shift and go to state 11


state 10

    (2) expression -> ID register COMMA . register COMMA register NEWLINE
    (3) expression -> ID register COMMA . register COMMA IMMEDIATE NEWLINE
    (4) expression -> ID register COMMA . IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (5) expression -> ID register COMMA . IMMEDIATE NEWLINE
    (6) expression -> ID register COMMA . ID NEWLINE
    (7) expression -> ID register COMMA . register COMMA ID NEWLINE
    (12) register -> . REGISTER

    IMMEDIATE       shift and go to state 14
    ID              shift and go to state 12
    REGISTER        shift and go to state 8

    register                       shift and go to state 13

state 11

    (8) expression -> COMPRESSED_ID register COMMA . register NEWLINE
    (9) expression -> COMPRESSED_ID register COMMA . IMMEDIATE NEWLINE
    (10) expression -> COMPRESSED_ID register COMMA . ID NEWLINE
    (11) expression -> COMPRESSED_ID register COMMA . IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE
    (12) register -> . REGISTER

    IMMEDIATE       shift and go to state 16
    ID              shift and go to state 17
    REGISTER        shift and go to state 8

    register                       shift and go to state 15

state 12

    (6) expression -> ID register COMMA ID . NEWLINE

    NEWLINE         shift and go to state 18


state 13

    (2) expression -> ID register COMMA register . COMMA register NEWLINE
    (3) expression -> ID register COMMA register . COMMA IMMEDIATE NEWLINE
    (7) expression -> ID register COMMA register . COMMA ID NEWLINE

    COMMA           shift and go to state 19


state 14

    (4) expression -> ID register COMMA IMMEDIATE . LEFT_PAREN register RIGHT_PAREN NEWLINE
    (5) expression -> ID register COMMA IMMEDIATE . NEWLINE

    LEFT_PAREN      shift and go to state 20
    NEWLINE         shift and go to state 21


state 15

    (8) expression -> COMPRESSED_ID register COMMA register . NEWLINE

    NEWLINE         shift and go to state 22


state 16

    (9) expression -> COMPRESSED_ID register COMMA IMMEDIATE . NEWLINE
    (11) expression -> COMPRESSED_ID register COMMA IMMEDIATE . LEFT_PAREN register RIGHT_PAREN NEWLINE

    NEWLINE         shift and go to state 23
    LEFT_PAREN      shift and go to state 24


state 17

    (10) expression -> COMPRESSED_ID register COMMA ID . NEWLINE

    NEWLINE         shift and go to state 25


state 18

    (6) expression -> ID register COMMA ID NEWLINE .

    $end            reduce using rule 6 (expression -> ID register COMMA ID NEWLINE .)


state 19

    (2) expression -> ID register COMMA register COMMA . register NEWLINE
    (3) expression -> ID register COMMA register COMMA . IMMEDIATE NEWLINE
    (7) expression -> ID register COMMA register COMMA . ID NEWLINE
    (12) register -> . REGISTER

    IMMEDIATE       shift and go to state 28
    ID              shift and go to state 26
    REGISTER        shift and go to state 8

    register                       shift and go to state 27

state 20

    (4) expression -> ID register COMMA IMMEDIATE LEFT_PAREN . register RIGHT_PAREN NEWLINE
    (12) register -> . REGISTER

    REGISTER        shift and go to state 8

    register                       shift and go to state 29

state 21

    (5) expression -> ID register COMMA IMMEDIATE NEWLINE .

    $end            reduce using rule 5 (expression -> ID register COMMA IMMEDIATE NEWLINE .)


state 22

    (8) expression -> COMPRESSED_ID register COMMA register NEWLINE .

    $end            reduce using rule 8 (expression -> COMPRESSED_ID register COMMA register NEWLINE .)


state 23

    (9) expression -> COMPRESSED_ID register COMMA IMMEDIATE NEWLINE .

    $end            reduce using rule 9 (expression -> COMPRESSED_ID register COMMA IMMEDIATE NEWLINE .)


state 24

    (11) expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN . register RIGHT_PAREN NEWLINE
    (12) register -> . REGISTER

    REGISTER        shift and go to state 8

    register                       shift and go to state 30

state 25

    (10) expression -> COMPRESSED_ID register COMMA ID NEWLINE .

    $end            reduce using rule 10 (expression -> COMPRESSED_ID register COMMA ID NEWLINE .)


state 26

    (7) expression -> ID register COMMA register COMMA ID . NEWLINE

    NEWLINE         shift and go to state 31


state 27

    (2) expression -> ID register COMMA register COMMA register . NEWLINE

    NEWLINE         shift and go to state 32


state 28

    (3) expression -> ID register COMMA register COMMA IMMEDIATE . NEWLINE

    NEWLINE         shift and go to state 33


state 29

    (4) expression -> ID register COMMA IMMEDIATE LEFT_PAREN register . RIGHT_PAREN NEWLINE

    RIGHT_PAREN     shift and go to state 34


state 30

    (11) expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register . RIGHT_PAREN NEWLINE

    RIGHT_PAREN     shift and go to state 35


state 31

    (7) expression -> ID register COMMA register COMMA ID NEWLINE .

    $end            reduce using rule 7 (expression -> ID register COMMA register COMMA ID NEWLINE .)


state 32

    (2) expression -> ID register COMMA register COMMA register NEWLINE .

    $end            reduce using rule 2 (expression -> ID register COMMA register COMMA register NEWLINE .)


state 33

    (3) expression -> ID register COMMA register COMMA IMMEDIATE NEWLINE .

    $end            reduce using rule 3 (expression -> ID register COMMA register COMMA IMMEDIATE NEWLINE .)


state 34

    (4) expression -> ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN . NEWLINE

    NEWLINE         shift and go to state 36


state 35

    (11) expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN . NEWLINE

    NEWLINE         shift and go to state 37


state 36

    (4) expression -> ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE .

    $end            reduce using rule 4 (expression -> ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE .)


state 37

    (11) expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE .

    $end            reduce using rule 11 (expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE .)

