
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COMPRESSED_ID ID IMMEDIATE LABEL_COLON LEFT_PAREN NEWLINE REGISTER RIGHT_PARENexpression : LABEL_COLON NEWLINEexpression : ID register COMMA register COMMA register NEWLINEexpression : ID register COMMA register COMMA IMMEDIATE NEWLINEexpression : ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINEexpression : ID register COMMA IMMEDIATE NEWLINEexpression : ID register COMMA ID NEWLINEexpression : ID register COMMA register COMMA ID NEWLINEexpression : COMPRESSED_ID register COMMA register NEWLINEexpression : COMPRESSED_ID register COMMA IMMEDIATE NEWLINEexpression : COMPRESSED_ID register COMMA ID NEWLINEexpression : COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINEregister : REGISTERexpression : NEWLINE'
    
_lr_action_items = {'LABEL_COLON':([0,],[2,]),'ID':([0,10,11,19,],[4,12,17,26,]),'COMPRESSED_ID':([0,],[5,]),'NEWLINE':([0,2,8,12,14,15,16,17,26,27,28,34,35,],[3,6,-12,18,21,22,23,25,31,32,33,36,37,]),'$end':([1,3,6,18,21,22,23,25,31,32,33,36,37,],[0,-13,-1,-6,-5,-8,-9,-10,-7,-2,-3,-4,-11,]),'REGISTER':([4,5,10,11,19,20,24,],[8,8,8,8,8,8,8,]),'COMMA':([7,8,9,13,],[10,-12,11,19,]),'RIGHT_PAREN':([8,29,30,],[-12,34,35,]),'IMMEDIATE':([10,11,19,],[14,16,28,]),'LEFT_PAREN':([14,16,],[20,24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'register':([4,5,10,11,19,20,24,],[7,9,13,15,27,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> LABEL_COLON NEWLINE','expression',2,'p_expression_label','parser.py',15),
  ('expression -> ID register COMMA register COMMA register NEWLINE','expression',7,'p_expression_r_instruction','parser.py',24),
  ('expression -> ID register COMMA register COMMA IMMEDIATE NEWLINE','expression',7,'p_statement_i_instruction','parser.py',36),
  ('expression -> ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE','expression',8,'p_statement_iload_s_jalr_instruction','parser.py',48),
  ('expression -> ID register COMMA IMMEDIATE NEWLINE','expression',5,'p_statement_u_instruction','parser.py',79),
  ('expression -> ID register COMMA ID NEWLINE','expression',5,'p_expression_jal_instruction','parser.py',90),
  ('expression -> ID register COMMA register COMMA ID NEWLINE','expression',7,'p_expression_b_instruction','parser.py',101),
  ('expression -> COMPRESSED_ID register COMMA register NEWLINE','expression',5,'p_expression_compressed_r_instruction','parser.py',113),
  ('expression -> COMPRESSED_ID register COMMA IMMEDIATE NEWLINE','expression',5,'p_expression_compressed_i_instruction','parser.py',124),
  ('expression -> COMPRESSED_ID register COMMA ID NEWLINE','expression',5,'p_expression_compressed_b_instruction','parser.py',135),
  ('expression -> COMPRESSED_ID register COMMA IMMEDIATE LEFT_PAREN register RIGHT_PAREN NEWLINE','expression',8,'p_statement_compressed_l_instruction','parser.py',146),
  ('register -> REGISTER','register',1,'p_register','parser.py',168),
  ('expression -> NEWLINE','expression',1,'p_statement_newline','parser.py',176),
]
